{"filename":"/usr/local/go/src/fmt/scan.go","keyword":"TODO","line":740,"detail":"TODO: accept N and Ni independently?\n"}{"filename":"/usr/local/go/src/strings/replace.go","keyword":"TODO","line":433,"detail":"TODO(bradfitz): use io.WriteString with slices of s, avoiding allocation.\n"}{"filename":"/usr/local/go/src/strings/strings.go","keyword":"TODO","line":628,"detail":"isSeparator reports whether the rune could mark a word boundary.\nTODO: update when package unicode captures more of the properties.\n"}
{"filename":"/usr/local/Cellar/go/1.10.2/libexec/src/fmt/scan.go","keyword":"TODO","line":732,"detail":"TODO: accept N and Ni independently?\n"}{"filename":"/usr/local/Cellar/go/1.10.2/libexec/src/math/exp.go","keyword":"TODO","line":189,"detail":"TODO(rsc): make sure Ldexp can handle boundary k\n"}{"filename":"/usr/local/Cellar/go/1.10.2/libexec/src/strings/builder.go","keyword":"TODO","line":34,"detail":"This hack works around a failing of Go's escape analysis\nthat was causing b to escape and be heap allocated.\nSee issue 23382.\nTODO: once issue 7921 is fixed, this should be reverted to\njust \"b.addr = b\".\n"}{"filename":"/usr/local/Cellar/go/1.10.2/libexec/src/strings/replace.go","keyword":"TODO","line":433,"detail":"TODO(bradfitz): use io.WriteString with slices of s, avoiding allocation.\n"}{"filename":"/usr/local/Cellar/go/1.10.2/libexec/src/strings/strings.go","keyword":"TODO","line":631,"detail":"isSeparator reports whether the rune could mark a word boundary.\nTODO: update when package unicode captures more of the properties.\n"}{"filename":"fmt","keyword":"TODO","line":11,"detail":"good"}{"filename":"a","keyword":"be","line":1,"detail":"good"}{"filename":"fmt","keyword":"r","line":1,"detail":"good"}{"filename":"","keyword":"","line":1,"detail":"good"}